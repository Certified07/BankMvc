@model BankMvc.DTO.ViewModels.LoginViewModel
@{
    ViewData["Title"] = "Sign In - SecureBank";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Login Section -->
<section class="auth-section bg-gradient-primary min-vh-100 d-flex align-items-center">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-5 col-xl-4">
                <div class="auth-card card shadow-lg border-0">
                    <div class="card-header bg-transparent text-center py-4">
                        <div class="auth-brand mb-3">
                            <i class="fas fa-university fa-3x text-primary"></i>
                        </div>
                        <h3 class="fw-bold text-dark mb-2">Welcome Back</h3>
                        <p class="text-muted mb-0">Sign in to your SecureBank account</p>
                    </div>

                    <div class="card-body p-4">
                        @if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                <i class="fas fa-check-circle me-2"></i>
                                @TempData["SuccessMessage"]
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>
                        }

                        <form asp-action="Login" method="post" id="loginForm">
                            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                            @if (!string.IsNullOrEmpty(ViewData["ReturnUrl"] as string))
                            {
                                <input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />
                            }

                            <div class="form-floating mb-3">
                                <input asp-for="Username" class="form-control form-control-lg" placeholder="Username" autocomplete="username" />
                                <label asp-for="Username">
                                    <i class="fas fa-user me-2"></i>Username
                                </label>
                                <span asp-validation-for="Username" class="text-danger small"></span>
                            </div>

                            <div class="form-floating mb-3">
                                <input asp-for="Password" class="form-control form-control-lg" placeholder="Password" autocomplete="current-password" />
                                <label asp-for="Password">
                                    <i class="fas fa-lock me-2"></i>Password
                                </label>
                                <div class="password-toggle">
                                    <button type="button" class="btn btn-link p-0" id="togglePassword">
                                        <i class="fas fa-eye" id="passwordIcon"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="Password" class="text-danger small"></span>
                            </div>

                            <div class="form-check mb-4">
                                <input asp-for="RememberMe" class="form-check-input" />
                                <label asp-for="RememberMe" class="form-check-label">
                                    Keep me signed in
                                </label>
                            </div>

                            <div class="d-grid mb-3">
                                <button type="submit" class="btn btn-primary btn-lg" id="loginBtn">
                                    <i class="fas fa-sign-in-alt me-2"></i>
                                    <span class="btn-text">Sign In</span>
                                </button>
                            </div>

                            <div class="text-center">
                                <a href="#" class="text-decoration-none small">
                                    <i class="fas fa-key me-1"></i>Forgot your password?
                                </a>
                            </div>
                        </form>
                    </div>

                    <div class="card-footer bg-light text-center py-3">
                        <p class="mb-0 text-muted">
                            Don't have an account?
                            <a asp-action="Register" class="text-primary fw-bold text-decoration-none">
                                Create one here
                            </a>
                        </p>
                        <div class="mt-2">
                            <a asp-controller="Home" asp-action="Index" class="text-muted small text-decoration-none">
                                <i class="fas fa-arrow-left me-1"></i>Back to Home
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Security Info -->
                <div class="text-center mt-4">
                    <div class="security-badges">
                        <span class="badge bg-success me-2">
                            <i class="fas fa-shield-alt me-1"></i>256-bit SSL
                        </span>
                        <span class="badge bg-info me-2">
                            <i class="fas fa-lock me-1"></i>Bank-level Security
                        </span>
                        <span class="badge bg-warning">
                            <i class="fas fa-clock me-1"></i>24/7 Support
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Custom Styles -->
<style>
    .auth-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        position: relative;
        overflow: hidden;
    }

        .auth-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)"/></svg>');
            opacity: 0.3;
        }

    .auth-card {
        border-radius: 20px;
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.95);
        position: relative;
        z-index: 1;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .auth-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.2);
        }

    .form-floating {
        position: relative;
    }

    .password-toggle {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        z-index: 10;
    }

        .password-toggle button {
            border: none;
            background: none;
            color: #6c757d;
            transition: color 0.3s ease;
        }

            .password-toggle button:hover {
                color: #495057;
            }

    .btn-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border: none;
        border-radius: 12px;
        font-weight: 600;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .btn-primary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.6s ease;
        }

        .btn-primary:hover::before {
            left: 100%;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.4);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

    .security-badges .badge {
        border-radius: 20px;
        padding: 8px 12px;
        font-weight: 500;
    }

    .form-control:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
    }

    .auth-brand {
        animation: pulse 2s ease-in-out infinite;
    }

        opacity: 1;
    }

    50% {
        opacity: 0.7;
    }

    }

    /* Loading state */
    .btn-loading {
        position: relative;
        pointer-events: none;
    }

        .btn-loading .btn-text {
            opacity: 0;
        }

        .btn-loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 20px;
            height: 20px;
            border: 2px solid transparent;
            border-top: 2px solid #fff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        transform: translate(-50%, -50%) rotate(360deg);
    }

    

    
        .auth-card

    {
        margin: 1rem;
    }

    .card-body {
        padding: 2rem 1.5rem;
    }

    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Toggle password visibility
            const togglePassword = document.getElementById('togglePassword');
            const passwordField = document.getElementById('Password');
            const passwordIcon = document.getElementById('passwordIcon');

            togglePassword.addEventListener('click', function() {
                const type = passwordField.getAttribute('type') === 'password' ? 'text' : 'password';
                passwordField.setAttribute('type', type);

                if (type === 'text') {
                    passwordIcon.classList.remove('fa-eye');
                    passwordIcon.classList.add('fa-eye-slash');
                } else {
                    passwordIcon.classList.remove('fa-eye-slash');
                    passwordIcon.classList.add('fa-eye');
                }
            });

            // Form submission handling
            const loginForm = document.getElementById('loginForm');
            const loginBtn = document.getElementById('loginBtn');

            loginForm.addEventListener('submit', function() {
                loginBtn.classList.add('btn-loading');
                loginBtn.disabled = true;

                // Re-enable button after 10 seconds as fallback
                setTimeout(function() {
                    loginBtn.classList.remove('btn-loading');
                    loginBtn.disabled = false;
                }, 10000);
            });

            // Add focus effects
            const formControls = document.querySelectorAll('.form-control');
            formControls.forEach(function(control) {
                control.addEventListener('focus', function() {
                    this.parentElement.classList.add('focused');
                });

                control.addEventListener('blur', function() {
                    if (!this.value) {
                        this.parentElement.classList.remove('focused');
                    }
                });
            });
        });
    </script>
}